# https://docs.github.com/en/actions/guides
# CI name , it will display on github's action page menu
name: 构建Java和Chrome环境
# trigger on which this CI should be run
on: # push operation is operate
  push:
    # here since my repository branch is named `main` , you should follow your own repository like `master`
    branches: [main]
# CI enviroment settings
env:
  TAG_NAME: "javachrome"
  #JdkVersion: "openjdk-11.0.10-jdk"#define in file "configarm64.json"
  #ChromeVersion: "92.0.4515.43" #define in file "configarm64.json"
jobs:
  build:
    name: arm64 docker image
    runs-on: ubuntu-latest # use latest ubuntu to run the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      # here are some step followed , each step must have `uses` or `run` key , for CI to run
      # other key like `name`,`with`,`env` is optional
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Sets build date
        run: echo "BUILD_DATE=$(date '+%Y%m%d')" >> $GITHUB_ENV
      - name: Add JdkVersion to GITHUB_ENV
        run: tail ./configarm64.json | python -c 'import json,sys;obj=json.load(sys.stdin);print('JdkVersion='+str(obj["JdkVersion"]).replace(":", "-"))' >> $GITHUB_ENV
      - name: Add ChromeVersion to GITHUB_ENV
        run: tail ./configarm64.json | python -c 'import json,sys;obj=json.load(sys.stdin);print('ChromeVersion='+obj["ChromeVersion"])' >> $GITHUB_ENV

      - name: check chrome_version
        run:  |
          echo ${{env.JdkVersion}}
      - name: check chrome_version
        run:  |
          echo ${{env.ChromeVersion}}
      
      #安装docker模拟器 多平台镜像专用
      - name: Installing docker emulators
        run: 
          docker run --privileged --rm tonistiigi/binfmt --install all
      #设置docker模拟器
      - name: docker buildx
        run: 
          docker buildx create --use --name mybuilder

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      #版本号第一位不允许空格
      - name: Push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: DockerfileArm64
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          platforms: linux/arm64 #镜像平台
          build-args: |
            CHROME_DRIVER_VERSION:${{env.ChromeVersion}}
          tags: "includeno/${{env.TAG_NAME}}:latest,includeno/${{env.TAG_NAME}}:${{ env.JdkVersion }}chrome${{ env.ChromeVersion }}"
          push: true
      - name: The job has succeeded
        if: ${{ success() }}
        run: echo "success"
    
   